plugins {
    alias(libs.plugins.androidApplication)
}

def keystoreFile = rootProject.file("app/sp.jks")

android {
    if (keystoreFile.exists()) {
        signingConfigs {
            release {
                storeFile file("sp.jks")
                storePassword "smartpack"
                keyAlias "sp_key1"
                keyPassword "smartpack"
            }
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }

    namespace 'com.sunilpaulmathew.snotz'
    compileSdk 34

    defaultConfig {
        applicationId "com.sunilpaulmathew.snotz"
        targetSdk 34
        versionCode 33
        versionName "v0.33"
        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
        testFunctionalTest = false
        testHandleProfiling = false
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }

        release {
            if (keystoreFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    flavorDimensions.add("release")
    productFlavors {
        play {
            minSdk 21
            dimension "release"
        }
        fdroid {
            minSdk 19
            dimension "release"
        }
    }
    lint {
        abortOnError false
    }

}

dependencies {
    api(project(":colorpicker"))
    implementation libs.biometric
    implementation libs.multidex
    playImplementation libs.billing

    implementation libs.adapters
    implementation libs.credits
    implementation libs.crashreporter
    implementation libs.fileutils
    implementation libs.permissionutils
    implementation libs.themeutils
    implementation libs.translatorutils

    implementation libs.material
    implementation libs.gson
    implementation libs.zxing
}